/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     interFoam;

startFrom       latestTime;

//startTime       0;

stopAt          endTime;

endTime         50;

deltaT          0.0001;

writeControl    adjustableRunTime;

writeInterval   0.04;

purgeWrite      0;

writeFormat     binary;

writePrecision  10;

writeCompression off;

timeFormat      general;

timePrecision   10;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           0.65;

maxAlphaCo      0.65;

maxDeltaT       0.1;





functions
{

    fieldAverage1
    {
        type               fieldAverage;
        libs               ("libfieldFunctionObjects.so");
        enabled            true;
        writeControl       adjustableRunTime;
        writeInterval      0.04;
        fields
        (
            U
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }

            p
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
            
            p_rgh
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
        );
    }


/*    #includeFunc solverInfo
    #includeFunc mag(U)
    #includeFunc components(U)
    #includeFunc grad(Ux)
    #includeFunc grad(Uy)
    #includeFunc grad(Uz)
    #includeFunc grad(p)
    interfaceHeight1
    {
        // Mandatory entries
        type            interfaceHeight;
        libs            (fieldFunctionObjects);
        locations       (  (-3    0    -0.5 ) (-1    0    -0.5 ) ( -0.5  0    -0.5 ) (-0.1  0  -0.5) (0.1 0 -0.5) );
        alpha           alpha.water;
        writeControl   timeStep;
        writeInterval  1;
    }




    probes0
    {
        type            probes;
        libs            (sampling);
        // Write at same frequency as fields
        writeControl   timeStep;
        writeInterval  1;

        // Fields to be probed
       fields
        (
            U alpha.water p_rgh p k epsilon nut nuTilda
        );


        // Optional: interpolation scheme to use (default is cell)
        interpolationScheme cellPoint;

        probeLocations
        (
            (-1  0  0  )
            (-0.1 0  0  )
            (-0.1 0 -0.7)
           (0.1   0   0)
           
           );

      // Optional: filter out points that haven't been found. Default
        //           is to include them (with value -VGREAT)
        includeOutOfBounds  true;
    }

    forces
    {
        type            forces;
        libs            (forces);
        patches         (GOWT);
        rhoInf          998.19;
        log             on;
        writeControl    timeStep;
        writeInterval   1;
        CofR            (0 0 0);  // Centre of rotation for moment calculations
    }*/
}



// ************************************************************************* //
                             
