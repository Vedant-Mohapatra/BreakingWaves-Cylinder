/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     interFoam;

startFrom       latestTime;

//startTime       0;

stopAt          endTime;

endTime         40;

deltaT          0.0001;

writeControl    adjustableRunTime;

writeInterval   0.1;

purgeWrite      101;

writeFormat     binary;

writePrecision  10;

writeCompression off;

timeFormat      general;

timePrecision   10;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           0.65;

maxAlphaCo      0.65;

maxDeltaT       0.01;

functions
{
    fieldAverage1
    {
        type               fieldAverage;
        libs               ("libfieldFunctionObjects.so");
        enabled            true;
        writeControl       adjustableRunTime;
        writeInterval      0.1;
        fields
        (
            U
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }

            p
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
            
            p_rgh
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
        );
    }
    
    interfaceHeight1
    {
        type            interfaceHeight;
        libs            (fieldFunctionObjects);
        locations
                        ( 
                            (-0.75  0 -1.25) 
                            (-0.35  0 -1.25) 
                            ( 0.35  0 -1.25) 
                            ( 0.7   0 -1.25) 
                            ( 1.4   0 -1.25) 
                        );
        alpha                  alpha.water;
        writeControl           timeStep;
        writeInterval          1;
    }
    
    forces1
    {
        // Mandatory entries
        type            forces;
        libs            ("libforces.so");
        patches         (GOWT);


        // Optional entries
        writeControl           timeStep;
        writeInterval          1;

        // Field names
        p               p;
        U               U;
        rho         rhoInf;
        rhoInf      998.19;

        // Reference pressure [Pa]
        pRef            0;

        // Include porosity effects?
        porosity        no;

        // Store and write volume field representations of forces and moments
        writeFields     no;

        // Centre of rotation for moment calculations
        CofR            (0 0 0);

        // Spatial data binning
        // - extents given by the bounds of the input geometry
        binData
        {
            nBin        20;
            direction   (1 0 0);
            cumulative  yes;
        }
    }

    pressureMeanOnGOWT
    {
        type                surfaces;
        libs                ("libsampling.so");
        enabled             true;
        writeControl        adjustableRunTime;
        writeInterval       5;
        log                 true;
        surfaceFormat       raw;

        fields      (pMean pPrime2Mean p_rghMean p_rghPrime2Mean);

        surfaces
        {
            GOWT
            {
                type    patch;
                patches (GOWT);
                interpolate false;
            }
        }
    }
}



// ************************************************************************* //
                             
